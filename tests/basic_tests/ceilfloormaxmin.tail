let v2:[int]1 = each{[double,int],[1]}(ceil,[3.2,2.8,-2.3,0.0,2.0,-1.7]) in
let v4:[int]1 = each{[double,int],[1]}(floor,[3.2,2.8,-2.3,0.0,2.0,-1.7]) in
let v7:[bool]0 = eqi(6,reduce{[int],[0]}(addi,0,v2)) in
let v10:[bool]0 = eqi(2,reduce{[int],[0]}(addi,0,v4)) in
let v12:[double]1 = each{[double,double],[1]}(fn v11:[double]0 => maxd(2.0,v11),[3.2,2.8,-2.3,0.0,2.0,-1.7]) in
let v15:[bool]0 = eqd(14.0,reduce{[double],[0]}(addd,0.0,v12)) in
let v17:[double]1 = each{[double,double],[1]}(fn v16:[double]0 => mind(2.0,v16),[3.2,2.8,-2.3,0.0,2.0,-1.7]) in
let v20:[bool]0 = eqd(2.0,reduce{[double],[0]}(addd,0.0,v17)) in
let v21:[bool]0 = eqi(0,mini(0,1)) in
let v22:[bool]0 = eqi(1,maxi(0,1)) in
let v23:[bool]0 = eqi(1,1) in
let v24:[bool]0 = eqi(0,0) in
i2d(b2i(reduce{[bool],[0]}(andb,tt,[v7,v10,v15,v20,v21,v22,v23,v24])))
