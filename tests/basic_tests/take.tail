let v6:[bool]0 = reduce{[bool],[0]}(andb,tt,zipWith{[int,int,bool],[1]}(eqi,[1,2,3],[1,2,3])) in
let v7:<int>6 = takeV{[int],[6]}(6,[1,2,3,4]) in
let v12:[bool]0 = reduce{[bool],[0]}(andb,tt,zipWith{[int,int,bool],[1]}(eqi,v7,[1,2,3,4,0,0])) in
let v13:[int]2 = take{[int],[2]}(2,reshape{[int],[1,2]}([4,5],iotaV(20))) in
let v15:[int]2 = each{[int,int],[2]}(fn v14:[int]0 => subi(10,v14),v13) in
let v22:[bool]0 = reduce{[bool],[0]}(andb,tt,reduce{[bool],[1]}(andb,tt,zipWith{[int,int,bool],[2]}(eqi,v15,reshape{[int],[1,2]}([2,5],[9,8,7,6,5,4,3,2,1,0])))) in
let v23:[int]2 = take{[int],[2]}(4,reshape{[int],[1,2]}([2,5],iotaV(8))) in
let v30:[bool]0 = reduce{[bool],[0]}(andb,tt,reduce{[bool],[1]}(andb,tt,zipWith{[int,int,bool],[2]}(eqi,v23,reshape{[int],[1,2]}([4,5],[1,2,3,4,5,6,7,8,1,2,0,0,0,0,0,0,0,0,0,0])))) in
let v36:[bool]0 = reduce{[bool],[0]}(andb,tt,zipWith{[int,int,bool],[1]}(eqi,[4,5],[4,5])) in
let v37:[int]2 = take{[int],[2]}(-2,reshape{[int],[1,2]}([4,2],iotaV(8))) in
let v44:[bool]0 = reduce{[bool],[0]}(andb,tt,reduce{[bool],[1]}(andb,tt,zipWith{[int,int,bool],[2]}(eqi,v37,reshape{[int],[1,2]}([2,2],[5,6,7,8])))) in
let v45:<int>6 = takeV{[int],[6]}(-6,[1,2,3,4]) in
let v50:[bool]0 = reduce{[bool],[0]}(andb,tt,zipWith{[int,int,bool],[1]}(eqi,v45,[0,0,1,2,3,4])) in
let v51:[int]2 = take{[int],[2]}(-6,reshape{[int],[1,2]}([4,2],iotaV(8))) in
let v58:[bool]0 = reduce{[bool],[0]}(andb,tt,reduce{[bool],[1]}(andb,tt,zipWith{[int,int,bool],[2]}(eqi,v51,reshape{[int],[1,2]}([6,2],[0,0,0,0,1,2,3,4,5,6,7,8])))) in
let v59:<int>3 = takeV{[int],[3]}(3,zilde{[int],[1]}()) in
let v67:[bool]0 = reduce{[bool],[0]}(andb,tt,zipWith{[double,double,bool],[1]}(eqd,eachV{[int,double],[3]}(i2d,v59),eachV{[int,double],[3]}(i2d,[0,0,0]))) in
let v68:<int>3 = takeV{[int],[3]}(-3,zilde{[int],[1]}()) in
let v76:[bool]0 = reduce{[bool],[0]}(andb,tt,zipWith{[double,double,bool],[1]}(eqd,eachV{[int,double],[3]}(i2d,v68),eachV{[int,double],[3]}(i2d,[0,0,0]))) in
let v82:[bool]0 = andb(eqi(0,0),reduce{[bool],[0]}(andb,tt,eachV{[int,bool],[1]}(fn v78:[int]0 => eqi(0,v78),[0]))) in
let v83:[int]2 = take{[int],[2]}(0,reshape{[int],[1,2]}([4,2],iotaV(8))) in
let v89:[bool]0 = andb(eqi(0,first{[int],[1]}(snocV{[int],[2]}(shape{[int],[2]}(v83),1))),reduce{[bool],[0]}(andb,tt,zipWith{[int,int,bool],[1]}(eqi,[0,2],shape{[int],[2]}(v83)))) in
let v90:<'b0>0 = takeV{['b0],[0]}(0,zilde{['b0],[1]}()) in
let v95:[bool]0 = andb(eqi(0,0),reduce{[bool],[0]}(andb,tt,eachV{[int,bool],[1]}(fn v91:[int]0 => eqi(0,v91),[0]))) in
let v96:<int>3 = takeV{[int],[3]}(3,[23]) in
let v101:[bool]0 = reduce{[bool],[0]}(andb,tt,zipWith{[int,int,bool],[1]}(eqi,v96,[23,0,0])) in
let v102:<int>3 = takeV{[int],[3]}(-3,[23]) in
let v107:[bool]0 = reduce{[bool],[0]}(andb,tt,zipWith{[int,int,bool],[1]}(eqi,v102,[0,0,23])) in
let v112:[bool]0 = reduce{[bool],[0]}(andb,tt,eachV{[int,bool],[1]}(fn v109:[int]0 => eqi(v109,23),[23])) in
let v117:[bool]0 = reduce{[bool],[0]}(andb,tt,eachV{[int,bool],[1]}(fn v114:[int]0 => eqi(v114,23),[23])) in
let v119:[bool]0 = eqi(1,1) in
let v120:[bool]0 = eqi(0,0) in
i2d(reduce{[int],[0]}(addi,0,[b2i(v6),b2i(v12),b2i(v22),b2i(v30),b2i(v36),b2i(v44),b2i(v50),b2i(v58),b2i(v67),b2i(v76),b2i(v82),b2i(v89),b2i(v95),b2i(v101),b2i(v107),b2i(v112),b2i(v117),b2i(v119),b2i(v120)]))
